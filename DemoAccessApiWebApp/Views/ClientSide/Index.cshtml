

@{
    ViewData["Title"] = "Client Side Example Page";
}


    <section id="app" class="container">

        <article class="row v-cloak">

            <div class="col-12">

                <h4 class="text-info my-3">Client Side API access using Vue JS</h4>

                <div v-if="errorMessage" class="alert alert-info">
                    {{errorMessage}}
                </div>

                <div v-if="loading" class="mt-5 display-4">
                    <span><i class="fa fa-spinner fa-spin"></i>&nbsp;&nbsp;Loading API Data...</span>
                </div>

                <div v-if="!loading && films.length === 0" class="my-5">
                    No films found
                </div>

                <div v-if="!loading && filmsFound">

                    <div v-for="film in films" :key="film.episodeId" class="card my-3">
                        <div class="card-body">
                            <h2 class="card-title">{{film.title}}</h2>
                            <h6 class="card-subtitle mb-2 text-muted">Year Released: {{formatDate(film.release_date)}}</h6>
                            <p class="card-text">{{film.opening_crawl}}</p>
                        </div>
                    </div>

                </div>
                              
            </div>

        </article>

    </section>

@section Scripts {

    <script>

        // In a production environment this would go in a separtate JS file in the 'wwwroot/js' folder

        var app = new Vue({
            el: '#app',
            mounted: function () {
                this.getFilms();
            },

            data: function () {
                return {                                
                    loading: true,
                    errorMessage: null,
                    filmsFound: false,
                    films: []
                };
            },

            methods: {

                // Get the Film data by calling API method on api controller
                getFilms() {
                    this.loading = true;
                    axios.get("/api/WebApi/films")
                        .then(response => { this.films = response.data; this.filmsFound = this.films.length > 0 ? true : false; })
                        .catch(error => { this.errorMessage = error.response.data; })
                        .finally(() => { this.loading = false; });
                },

                // Format date into local string format
                formatDate(inDate) {
                    var formattedDate = new Date(inDate);
                    return formattedDate.toLocaleDateString();
                }
            }
        });

    </script>

}